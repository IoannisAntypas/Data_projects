{"version":3,"sources":["graph.js"],"names":["module","hot","accept","window","location","reload","margin","top","right","bottom","left","width","height","svg","d3","select","append","attr","colorScale","scaleOrdinal","range","xPositionScale","scaleLinear","domain","yPositionScale","ready","datapoints","console","log","selectAll","data","enter","d","gdp_per_capita","life_expectancy","continent","yAxis","axisLeft","call","xAxis","axisBottom","csv","require","then","catch","err"],"mappings":";;;AACsB,oBAAXA,QAA0BA,OAAOC,KAC1CD,OAAOC,IAAIC,OAAO,WAChBC,OAAOC,SAASC,WAIpB,IAAIC,EAAS,CAAEC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAEjDC,EAAQ,IAAML,EAAOI,KAAOJ,EAAOE,MAEnCI,EAAS,IAAMN,EAAOC,IAAMD,EAAOG,OAEnCI,EAAMC,GACPC,OAAO,UACPC,OAAO,OACPC,KAAK,QAASN,EAAQL,EAAOI,KAAOJ,EAAOE,OAC3CS,KAAK,SAAUL,EAASN,EAAOC,IAAMD,EAAOG,QAC5CO,OAAO,KACPC,KAAK,YAAa,aAAeX,EAAOI,KAAO,IAAMJ,EAAOC,IAAM,KAEjEW,EAAaJ,GACdK,eACAC,MAAM,CAAC,MAAO,SAAU,OAAQ,QAAS,SAAU,WAElDC,EAAiBP,GAClBQ,cACAC,OAAO,CAAC,EAAG,MACXH,MAAM,CAAC,EAAGT,IAETa,EAAiBV,GAClBQ,cACAC,OAAO,CAAC,EAAG,KACXH,MAAM,CAACR,EAAQ,IAQlB,SAASa,EAAMC,GACbC,QAAQC,IAAI,UAAWF,GAEvBb,EACGgB,UAAU,UACVC,KAAKJ,GACLK,QACAf,OAAO,UACPC,KAAK,IAAK,GACVA,KAAK,KAAM,SAASe,GACZX,OAAAA,EAAeW,EAAEC,kBAEzBhB,KAAK,KAAM,SAASe,GACZR,OAAAA,EAAeQ,EAAEE,mBAEzBjB,KAAK,OAAQ,SAASe,GACdd,OAAAA,EAAWc,EAAEG,aAErBlB,KAAK,UAAW,IAEfmB,IAAAA,EAAQtB,GAAGuB,SAASb,GACxBX,EACGG,OAAO,KACPC,KAAK,QAAS,eACdqB,KAAKF,GAEJG,IAAAA,EAAQzB,GAAG0B,WAAWnB,GAC1BR,EACGG,OAAO,KACPC,KAAK,QAAS,eACdA,KAAK,YAAa,eAAiBL,EAAS,KAC5C0B,KAAKC,GArCVzB,GAAG2B,IAAIC,QAAQ,oBACZC,KAAKlB,GACLmB,MAAM,SAASC,GACdlB,QAAQC,IAAI,YAAaiB","file":"graph.4c42725a.map","sourceRoot":"../../../../d3_soma/storytelling-2018-zips/4-work","sourcesContent":["/* global d3 */\nif (typeof module !== 'undefined' && module.hot) {\n  module.hot.accept(() => {\n    window.location.reload()\n  })\n}\n\nvar margin = { top: 20, right: 50, bottom: 50, left: 50 }\n\nvar width = 800 - margin.left - margin.right\n\nvar height = 500 - margin.top - margin.bottom\n\nvar svg = d3\n  .select('#chart')\n  .append('svg')\n  .attr('width', width + margin.left + margin.right)\n  .attr('height', height + margin.top + margin.bottom)\n  .append('g')\n  .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\nvar colorScale = d3\n  .scaleOrdinal()\n  .range(['red', 'orange', 'blue', 'green', 'purple', 'yellow'])\n\nvar xPositionScale = d3\n  .scaleLinear()\n  .domain([0, 80000])\n  .range([0, width])\n\nvar yPositionScale = d3\n  .scaleLinear()\n  .domain([0, 90])\n  .range([height, 0])\n\nd3.csv(require('./countries.csv'))\n  .then(ready)\n  .catch(function(err) {\n    console.log('Failed on', err)\n  })\n\nfunction ready(datapoints) {\n  console.log('Data is', datapoints)\n\n  svg\n    .selectAll('circle')\n    .data(datapoints)\n    .enter()\n    .append('circle')\n    .attr('r', 5)\n    .attr('cx', function(d) {\n      return xPositionScale(d.gdp_per_capita)\n    })\n    .attr('cy', function(d) {\n      return yPositionScale(d.life_expectancy)\n    })\n    .attr('fill', function(d) {\n      return colorScale(d.continent)\n    })\n    .attr('opacity', 0.5)\n\n  var yAxis = d3.axisLeft(yPositionScale)\n  svg\n    .append('g')\n    .attr('class', 'axis y-axis')\n    .call(yAxis)\n\n  var xAxis = d3.axisBottom(xPositionScale)\n  svg\n    .append('g')\n    .attr('class', 'axis x-axis')\n    .attr('transform', 'translate(0,' + height + ')')\n    .call(xAxis)\n}\n"]}